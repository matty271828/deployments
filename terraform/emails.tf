# Email-related DNS records for Brevo authentication
# This file contains all DNS records needed for email sending via Brevo

# Brevo SPF record for email authentication
# This allows Brevo to send emails on behalf of your domain
resource "cloudflare_dns_record" "brevo_spf" {
  for_each = local.frontend_repos

  zone_id = cloudflare_zone.domain[each.key].id
  name    = "@"
  content = "\"v=spf1 include:spf.sendinblue.com ~all\""
  type    = "TXT"
  ttl     = 1

  depends_on = [cloudflare_zone.domain]
}

# Brevo DMARC record for email authentication
# This policy tells receiving servers how to handle emails from your domain
resource "cloudflare_dns_record" "brevo_dmarc" {
  for_each = local.frontend_repos

  zone_id = cloudflare_zone.domain[each.key].id
  name    = "_dmarc"
  content = "\"v=DMARC1; p=quarantine; rua=mailto:dmarc@${each.key}; ruf=mailto:dmarc@${each.key}; sp=quarantine; adkim=r; aspf=r;\""
  type    = "TXT"
  ttl     = 1

  depends_on = [cloudflare_zone.domain]
}

# Note: DKIM records are NOT created in Terraform
# 
# DKIM records are unique per domain and generated by Brevo when a domain is added.
# The DKIM record is added via the setup_brevo_domain GitHub Action after:
# 1. Domain is added to Brevo
# 2. Brevo generates the unique DKIM record
# 3. Action retrieves the DKIM record and adds it to Cloudflare via API
#
# This is necessary because:
# - DKIM records are unique per domain
# - The content is not known until after domain is added to Brevo
# - Terraform cannot template dynamic content that doesn't exist yet 