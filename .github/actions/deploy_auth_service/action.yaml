name: 'Deploy Auth Service'
description: 'Deploys the auth service'

inputs:
  cloudflare_account_id:
    description: 'Cloudflare Account ID'
    required: true
  cloudflare_api_token:
    description: 'Cloudflare API token'
    required: true
  auth_db_id:
    description: 'The ID of the AUTH_DB D1 database'
    required: true
  domain_worker_names:
    description: 'JSON string of domain worker names for worker-to-worker bindings'
    required: true
  GH_PERSONAL_ACCESS_TOKEN:
    description: 'GitHub Personal Access Token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      working-directory: './auth-service'
      shell: bash
      run: 'npm install'

    # Due to the bug in the cloudflare terraform provider, we need to manually
    # update the wrangler.toml file to include the AUTH_DB database ID.
    - name: Update wrangler.toml
      working-directory: './auth-service'
      shell: bash
      run: |
        sed -i "s/database_id = \"\"/database_id = \"${{ inputs.auth_db_id }}\"/" wrangler.toml

    # Add worker-to-worker bindings for each domain worker
    - name: Add worker-to-worker bindings
      working-directory: './auth-service'
      shell: bash
      run: |
        # Parse the domain worker names JSON
        DOMAIN_WORKERS='${{ inputs.domain_worker_names }}'
        
        # Add worker-to-worker bindings to wrangler.toml
        echo "" >> wrangler.toml
        echo "# Worker-to-worker bindings" >> wrangler.toml
        echo "$DOMAIN_WORKERS" | jq -r 'to_entries[] | "[[services]]\nbinding = \"" + .key + "-worker\"\nservice = \"" + .value + "\""' >> wrangler.toml

    # There is a bug in the cloudflare terraform provider. We will have to reupload an ES module worker
    # using the API after our terraform run has completed.
    - name: Deploy Worker
      working-directory: './auth-service'
      shell: bash
      run: 'npx wrangler deploy'
      env:
        CLOUDFLARE_API_TOKEN: ${{ inputs.cloudflare_api_token }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cloudflare_account_id }}