name: 'Validate Cloudflare Credentials'
description: 'Validate that the Cloudflare credentials are present in the repository secrets and variables'

inputs:
  cloudflare_account_id:
    description: 'Cloudflare Account ID'
    required: true
  cloudflare_api_token:
    description: 'Cloudflare API token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check Cloudflare Account ID
      shell: bash
      run: |
        if [ -z "${{ inputs.cloudflare_account_id }}" ]; then
          echo "::error::Cloudflare Account ID is missing. Please add it to your repository secrets:"
          echo "1. Go to your repository settings"
          echo "2. Navigate to Secrets and Variables > Actions"
          echo "3. Click 'New repository secret'"
          echo "4. Name: CLOUDFLARE_ACCOUNT_ID"
          echo "5. Value: Your Cloudflare Account ID"
          echo "6. Click 'Add secret'"
          exit 1
        fi
        echo "✅ Cloudflare Account ID is present"
        
    - name: Check Cloudflare API Token
      shell: bash
      run: |
        if [ -z "${{ inputs.cloudflare_api_token }}" ]; then
          echo "::error::Cloudflare API Token is missing"
          echo ""
          echo "Please create a new Account level API Token:"
          echo "1. Go to Cloudflare Dashboard → Manage Account → Account API Tokens"
          echo "2. Click 'Create Token'"
          echo "3. Choose 'Create Custom Token'"
          echo "4. Set these permissions:"
          echo "   - Account Settings: Read"
          echo "   - Zone: Edit"
          echo "   - Zone Settings: Edit"
          echo "   - Cloudflare Pages: Edit"
          echo "   - Account Resources: All accounts"
          echo "   - Zone Resources: All zones"
          echo ""
          echo "Once you have created the token:"
          echo "1. Go to your repository settings"
          echo "2. Navigate to Secrets and Variables > Actions"
          echo "3. Click 'New repository secret'"
          echo "4. Name: CLOUDFLARE_API_TOKEN"
          echo "5. Value: Your new API token"
          echo "6. Click 'Add secret'"
          exit 1
        fi
        echo "✅ Cloudflare API Token is present"

    - name: Validate Cloudflare API Token
      shell: bash
      run: |
        # Install jq if not present
        if ! command -v jq &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y jq
        fi

        # Validate token format
        TOKEN="${{ inputs.cloudflare_api_token }}"
        if ! [[ "$TOKEN" =~ ^[a-zA-Z0-9_-]{40}$ ]]; then
          echo "::error::Invalid API Token format"
          echo "API tokens must be 40 characters long and only contain characters a-z, A-Z, 0-9, hyphens and underscores"
          echo ""
          echo "Please create a new Account level API Token:"
          echo "1. Go to Cloudflare Dashboard → Manage Account → Account API Tokens"
          echo "2. Click 'Create Token'"
          echo "3. Choose 'Create Custom Token'"
          echo "4. Set these permissions:"
          echo "   - Account Settings: Read"
          echo "   - Zone: Edit"
          echo "   - Zone Settings: Edit"
          echo "   - Cloudflare Pages: Edit"
          echo "   - Account Resources: All accounts"
          echo "   - Zone Resources: All zones"
          exit 1
        fi

        # Get token details from Cloudflare API
        TOKEN_INFO=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${{ inputs.cloudflare_account_id }}/tokens/verify" \
          -H "Authorization: Bearer $TOKEN" \
          -H "Content-Type: application/json")

        # Check if the API call was successful
        if ! echo "$TOKEN_INFO" | jq -e '.success == true' > /dev/null; then
          # Extract error message from API response
          ERROR_MESSAGE=$(echo "$TOKEN_INFO" | jq -r '.errors[0].message // "Unknown error"')
          echo "::error::Invalid API Token: $ERROR_MESSAGE"
          echo ""
          echo "This could be because:"
          echo "1. The token is malformed or invalid"
          echo "2. The token has been revoked"
          echo "3. You're using a Global API Key instead of an API Token"
          echo ""
          echo "Please create a new Account level API Token:"
          echo "1. Go to Cloudflare Dashboard → Manage Account → Account API Tokens"
          echo "2. Click 'Create Token'"
          echo "3. Choose 'Create Custom Token'"
          echo "4. Set these permissions:"
          echo "   - Account Settings: Read"
          echo "   - Zone: Edit"
          echo "   - Zone Settings: Edit"
          echo "   - Cloudflare Pages: Edit"
          echo "   - Account Resources: All accounts"
          echo "   - Zone Resources: All zones"
          exit 1
        fi

        # Extract token status
        TOKEN_STATUS=$(echo "$TOKEN_INFO" | jq -r '.result.status')
        
        # Check if token is active
        if [[ "$TOKEN_STATUS" != "active" ]]; then
          echo "::error::Invalid API Token: Token is not active"
          exit 1
        fi
        
        echo "✅ API Token is valid and active"
        echo "Note: Please ensure your token has the following permissions:"
        echo "   - Account Settings: Read"
        echo "   - Zone: Edit"
        echo "   - Zone Settings: Edit"
        echo "   - Cloudflare Pages: Edit"
        echo "   - Account Resources: All accounts"
        echo "   - Zone Resources: All zones"

    - name: Validate R2 is enabled
      shell: bash
      run: |
        # Check if R2 is enabled by attempting to list buckets
        R2_STATUS=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${{ inputs.cloudflare_account_id }}/r2/buckets" \
          -H "Authorization: Bearer ${{ inputs.cloudflare_api_token }}" \
          -H "Content-Type: application/json")
        
        if ! echo "$R2_STATUS" | jq -e '.success == true' > /dev/null; then
          ERROR_CODE=$(echo "$R2_STATUS" | jq -r '.errors[0].code // "unknown"')
          ERROR_MESSAGE=$(echo "$R2_STATUS" | jq -r '.errors[0].message // "Unknown error"')
          
          if [[ "$ERROR_CODE" == "10001" ]]; then
            echo "::error::R2 is not enabled for your account"
            echo ""
            echo "Please enable R2 through the Cloudflare Dashboard:"
            echo "1. Go to Cloudflare Dashboard → R2"
            echo "2. Click 'Enable R2'"
            echo "3. Follow the prompts to add payment information"
            echo "4. Once enabled, you can use R2 for storing domain mappings"
            echo ""
            echo "Note: R2 requires payment information to be set up, even for the free tier."
            echo "This is a one-time setup requirement from Cloudflare."
          else
            echo "::error::Failed to access R2: $ERROR_MESSAGE"
            echo ""
            echo "This could be because:"
            echo "1. Your API token doesn't have R2 permissions"
            echo "2. R2 is not properly enabled"
            echo "3. There's an issue with your Cloudflare account"
            echo ""
            echo "Please check your API token permissions and ensure R2 is enabled."
          fi
          exit 1
        fi
        
        echo "✅ R2 is enabled and accessible for your account"


