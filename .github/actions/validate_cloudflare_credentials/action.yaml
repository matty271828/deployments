name: 'Validate Cloudflare Credentials'
description: 'Validate that the Cloudflare credentials are present in the repository secrets and variables'

inputs:
  cloudflare_account_id:
    description: 'Cloudflare Account ID'
    required: true
  cloudflare_api_token:
    description: 'Cloudflare API token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Check Cloudflare Account ID
      shell: bash
      run: |
        if [ -z "${{ inputs.cloudflare_account_id }}" ]; then
          echo "::error::Cloudflare Account ID is missing. Please add it to your repository secrets:"
          echo "1. Go to your repository settings"
          echo "2. Navigate to Secrets and Variables > Actions"
          echo "3. Click 'New repository secret'"
          echo "4. Name: CLOUDFLARE_ACCOUNT_ID"
          echo "5. Value: Your Cloudflare Account ID"
          echo "6. Click 'Add secret'"
          exit 1
        fi
        echo "✅ Cloudflare Account ID is present"
        
    - name: Check Cloudflare API Token
      shell: bash
      run: |
        if [ -z "${{ inputs.cloudflare_api_token }}" ]; then
          echo "::error::Cloudflare API Token is missing"
          echo ""
          echo "Please create a new Account level API Token:"
          echo "1. Go to Cloudflare Dashboard → Manage Account → Account API Tokens"
          echo "2. Click 'Create Token'"
          echo "3. Choose 'Create Custom Token'"
          echo "4. Set these permissions:"
          echo "   - Account Settings: Read"
          echo "   - Zone: Edit"
          echo "   - Zone Settings: Edit"
          echo "   - Cloudflare Pages: Edit"
          echo "   - Account Resources: All accounts"
          echo "   - Zone Resources: All zones"
          echo ""
          echo "Once you have created the token:"
          echo "1. Go to your repository settings"
          echo "2. Navigate to Secrets and Variables > Actions"
          echo "3. Click 'New repository secret'"
          echo "4. Name: CLOUDFLARE_API_TOKEN"
          echo "5. Value: Your new API token"
          echo "6. Click 'Add secret'"
          exit 1
        fi
        echo "✅ Cloudflare API Token is present"

    - name: Validate Cloudflare API Token
      shell: bash
      run: |
        # Install jq if not present
        if ! command -v jq &> /dev/null; then
          sudo apt-get update && sudo apt-get install -y jq
        fi

        # Validate token format
        TOKEN="${{ inputs.cloudflare_api_token }}"
        if ! [[ "$TOKEN" =~ ^[a-zA-Z0-9_-]{40}$ ]]; then
          echo "::error::Invalid API Token format"
          echo "API tokens must be 40 characters long and only contain characters a-z, A-Z, 0-9, hyphens and underscores"
          echo ""
          echo "Please create a new Account level API Token:"
          echo "1. Go to Cloudflare Dashboard → Manage Account → Account API Tokens"
          echo "2. Click 'Create Token'"
          echo "3. Choose 'Create Custom Token'"
          echo "4. Set these permissions:"
          echo "   - Account Settings: Read"
          echo "   - Zone: Edit"
          echo "   - Zone Settings: Edit"
          echo "   - Cloudflare Pages: Edit"
          echo "   - Account Resources: All accounts"
          echo "   - Zone Resources: All zones"
          exit 1
        fi

        # Get token details from Cloudflare API
        TOKEN_INFO=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${{ inputs.cloudflare_account_id }}/tokens/verify" \
          -H "Authorization: Bearer $TOKEN" \
          -H "Content-Type: application/json")

        # Check if the API call was successful
        if ! echo "$TOKEN_INFO" | jq -e '.success == true' > /dev/null; then
          # Extract error message from API response
          ERROR_MESSAGE=$(echo "$TOKEN_INFO" | jq -r '.errors[0].message // "Unknown error"')
          echo "::error::Invalid API Token: $ERROR_MESSAGE"
          echo ""
          echo "This could be because:"
          echo "1. The token is malformed or invalid"
          echo "2. The token has been revoked"
          echo "3. You're using a Global API Key instead of an API Token"
          echo ""
          echo "Please create a new Account level API Token:"
          echo "1. Go to Cloudflare Dashboard → Manage Account → Account API Tokens"
          echo "2. Click 'Create Token'"
          echo "3. Choose 'Create Custom Token'"
          echo "4. Set these permissions:"
          echo "   - Account Settings: Read"
          echo "   - Zone: Edit"
          echo "   - Zone Settings: Edit"
          echo "   - Cloudflare Pages: Edit"
          echo "   - Account Resources: All accounts"
          echo "   - Zone Resources: All zones"
          exit 1
        fi

        # Extract token status
        TOKEN_STATUS=$(echo "$TOKEN_INFO" | jq -r '.result.status')

        # TODO: Use the list permissions groups endpoint to check the exact
        # permissions the token has and output any missing permissions.
        
        # Check if token is active
        if [[ "$TOKEN_STATUS" != "active" ]]; then
          echo "::error::Invalid API Token: Token is not active"
          exit 1
        fi
        
        echo "✅ API Token is valid and active"
        echo "Note: Please ensure your token has the following permissions:"
        echo "   - Account Settings: Read"
        echo "   - Zone: Edit"
        echo "   - Zone Settings: Edit"
        echo "   - Cloudflare Pages: Edit"
        echo "   - Account Resources: All accounts"
        echo "   - Zone Resources: All zones"

    - name: Validate Cloudflare Pages Git Integration
      shell: bash
      run: |
        # Check if Git integration is set up
        GIT_INTEGRATION=$(curl -s -X GET "https://api.cloudflare.com/client/v4/accounts/${{ inputs.cloudflare_account_id }}/pages/projects" \
          -H "Authorization: Bearer ${{ inputs.cloudflare_api_token }}" \
          -H "Content-Type: application/json")

        if ! echo "$GIT_INTEGRATION" | jq -e '.success == true' > /dev/null; then
          echo "::error::Failed to check Cloudflare Pages Git integration"
          echo ""
          echo "Please ensure you have set up Git integration for Cloudflare Pages:"
          echo "1. Go to Cloudflare Dashboard → Pages"
          echo "2. Click 'Create a project'"
          echo "3. Choose 'Connect to Git'"
          echo "4. Select GitHub"
          echo "5. Authorize Cloudflare to access your GitHub account"
          echo "6. Select the repository you want to deploy"
          exit 1
        fi

        # Check if there are any Git integration errors
        if echo "$GIT_INTEGRATION" | jq -e '.errors' > /dev/null; then
          ERROR_MESSAGE=$(echo "$GIT_INTEGRATION" | jq -r '.errors[0].message // "Unknown error"')
          echo "::error::Git integration error: $ERROR_MESSAGE"
          echo ""
          echo "Please check your Git integration:"
          echo "1. Go to Cloudflare Dashboard → Pages"
          echo "2. Go to your project settings"
          echo "3. Under 'Git integration', try disconnecting and reconnecting GitHub"
          echo "4. If the issue persists, go to GitHub settings and revoke Cloudflare access, then reconnect"
          exit 1
        fi

        echo "✅ Cloudflare Pages Git integration is properly configured"
