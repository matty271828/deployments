name: 'Validate Gmail Address'
description: 'Validates that the provided Gmail address is properly formatted'

inputs:
  gmail_address:
    description: 'Gmail address to validate'
    required: true

runs:
  using: "composite"
  steps:
    - name: Validate Gmail address format
      shell: bash
      run: |
        GMAIL_ADDRESS="${{ inputs.gmail_address }}"
        
        # Check if Gmail address is provided
        if [ -z "$GMAIL_ADDRESS" ]; then
          echo "::error::Gmail address is required"
          exit 1
        fi
        
        # Check if it's a valid email format
        if ! echo "$GMAIL_ADDRESS" | grep -E "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$" > /dev/null; then
          echo "::error::Invalid email format: $GMAIL_ADDRESS"
          exit 1
        fi
        
        # Check if it's a Gmail address
        if ! echo "$GMAIL_ADDRESS" | grep -E "@gmail\.com$" > /dev/null; then
          echo "::error::Email must be a Gmail address: $GMAIL_ADDRESS"
          echo "::error::Only Gmail addresses are supported for email forwarding"
          exit 1
        fi
        
        # Check for common Gmail format issues
        if echo "$GMAIL_ADDRESS" | grep -E "\.{2,}" > /dev/null; then
          echo "::error::Gmail address contains consecutive dots: $GMAIL_ADDRESS"
          exit 1
        fi
        
        if echo "$GMAIL_ADDRESS" | grep -E "^\.|\.$" > /dev/null; then
          echo "::error::Gmail address starts or ends with a dot: $GMAIL_ADDRESS"
          exit 1
        fi
        
        # Check length (Gmail username must be 6-30 characters)
        USERNAME=$(echo "$GMAIL_ADDRESS" | cut -d@ -f1)
        if [ ${#USERNAME} -lt 6 ] || [ ${#USERNAME} -gt 30 ]; then
          echo "::error::Gmail username must be 6-30 characters: $USERNAME"
          exit 1
        fi
        
        echo "âœ… Gmail address validation passed: $GMAIL_ADDRESS"
        echo "Gmail address will be used for email forwarding" 