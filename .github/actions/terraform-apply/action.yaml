name: 'Terraform Apply'
description: 'Apply Terraform configuration'

inputs:
  domain:
    description: 'Domain name for the deployment'
    required: true
  cloudflare_account_id:
    description: 'Cloudflare Account ID'
    required: true
  cloudflare_api_token:
    description: 'Cloudflare API Token'
    required: true
  GH_PERSONAL_ACCESS_TOKEN:
    description: 'GitHub Personal Access Token'
    required: true

outputs:
  terraform_error:
    description: 'Indicates if there was an error in Terraform operations'
    value: ${{ steps.terraform.outputs.terraform_error }}

runs:
  using: "composite"
  steps:
    - name: Fetch Terraform Files
      shell: bash
      run: |
        git fetch origin main
        git checkout origin/main -- terraform/ || true
        
    - name: Terraform Apply
      id: terraform
      shell: bash
      working-directory: ./terraform
      run: |
        set +e
        timeout 900 terraform apply -auto-approve tfplan
        exit_code=$?
        if [ $exit_code -eq 124 ]; then
          echo "::error::Terraform apply timed out after 15 minutes"
          echo "terraform_error=true" >> $GITHUB_OUTPUT
          exit 1
        elif [ $exit_code -ne 0 ]; then
          echo "terraform_error=true" >> $GITHUB_OUTPUT
        else
          echo "terraform_error=false" >> $GITHUB_OUTPUT
        fi
        exit $exit_code
      env:
        TF_VAR_CLOUDFLARE_ACCOUNT_ID: ${{ inputs.cloudflare_account_id }}
        TF_VAR_CLOUDFLARE_API_TOKEN: ${{ inputs.cloudflare_api_token }}
        TF_VAR_domain: ${{ inputs.domain }}
        TF_LOG: DEBUG

    - name: Check for State File Changes
    id: check_state_changes
    if: always()
    run: |
      git fetch origin main
      if git diff origin/main -- terraform/terraform.tfstate | grep .; then
        echo "changes=true" >> $GITHUB_ENV
      else
        echo "changes=false" >> $GITHUB_ENV
      fi

  - name: Commit state file
    if: env.changes == 'true'
    run: |
      git config --global user.name "github-actions"
      git config --global user.email "github-actions@github.com"
      git add terraform/terraform.tfstate
      git commit -m "Save Result of Terraform Apply"

  - name: Push state file
    if: env.changes == 'true'
    uses: ad-m/github-push-action@master
    with:
      GITHUB_TOKEN: ${{ inputs.GH_PERSONAL_ACCESS_TOKEN }}
      branch: main

  - name: Check for Terraform Errors
    if: always()
    run: |
      if [ "${{ steps.build_and_deliver.outputs.terraform_error }}" == "true" ]; then
        echo "Terraform operations encountered errors"
        exit 1
      fi