name: 'Terraform Plan'
description: 'Create Terraform execution plan'

inputs:
  domain:
    description: 'Domain name for the deployment'
    required: true
  cloudflare_account_id:
    description: 'Cloudflare Account ID'
    required: true
  cloudflare_api_token:
    description: 'Cloudflare API Token'
    required: true
  digital_ocean_ssh_key_name:
    description: 'DigitalOcean SSH Key Name'
    required: true
  digital_ocean_ssh_private_key:
    description: 'DigitalOcean API Key Token'
    required: true

outputs:
  terraform_error:
    description: 'Indicates if there was an error in Terraform operations'
    value: ${{ steps.terraform.outputs.terraform_error }}

runs:
  using: "composite"
  steps:
    - name: Terraform Init
      working-directory: ./terraform
      shell: bash
      run: |
        terraform init -upgrade 
           
    - name: Terraform Plan
      id: terraform
      working-directory: ./terraform
      shell: bash
      run: |
        set +e
        timeout 900 terraform plan -out=tfplan
        exit_code=$?
        if [ $exit_code -eq 124 ]; then
          echo "::error::Terraform plan timed out after 15 minutes"
          echo "terraform_error=true" >> $GITHUB_OUTPUT
          exit 1
        elif [ $exit_code -ne 0 ]; then
          echo "terraform_error=true" >> $GITHUB_OUTPUT
        else
          echo "terraform_error=false" >> $GITHUB_OUTPUT
        fi
        exit $exit_code
      env:
        TF_VAR_cloudflare_account_id: ${{ inputs.cloudflare_account_id }}
        TF_VAR_cloudflare_api_token: ${{ inputs.cloudflare_api_token }}
        TF_VAR_domain: ${{ inputs.domain }}
        TF_VAR_DIGITAL_OCEAN_SSH_KEY_NAME: ${{ inputs.DIGITAL_OCEAN_SSH_KEY_NAME }}
        TF_VAR_DIGITAL_OCEAN_SSH_PRIVATE_KEY: ${{ inputs.DIGITAL_OCEAN_SSH_PRIVATE_KEY }}
        TF_LOG: DEBUG