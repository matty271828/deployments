name: 'Configure Deploy User'
description: 'Creates and configures the deploy user on the droplet'

inputs:
  droplet_ip:
    description: 'Digital Ocean Droplet IP'
    required: true
  digital_ocean_ssh_private_key:
    description: 'SSH private key for DigitalOcean'
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ inputs.digital_ocean_ssh_private_key }}

    - name: Configure `Deploy` User
      shell: bash
      run: |
        # Set droplet IP as environment variable
        DROPLET_IP="${{ inputs.droplet_ip }}"
        echo "Attempting to connect to droplet IP: ${DROPLET_IP}"

        # Function to check if user exists
        check_user() {
          ssh -o StrictHostKeyChecking=no "root@${DROPLET_IP}" "id -u deploy >/dev/null 2>&1"
          return $?
        }

        # Create deploy user if it doesn't exist
        if ! check_user; then
          echo "Creating deploy user..."
          ssh -o StrictHostKeyChecking=no "root@${DROPLET_IP}" "
            useradd -m -s /bin/bash deploy && \
            mkdir -p /home/deploy/.ssh && \
            touch /home/deploy/.ssh/authorized_keys && \
            chmod 700 /home/deploy/.ssh && \
            chmod 600 /home/deploy/.ssh/authorized_keys && \
            chown -R deploy:deploy /home/deploy/.ssh
          "
        else
          echo "Deploy user already exists"
        fi

        # Configure sudo access (idempotent)
        ssh -o StrictHostKeyChecking=no "root@${DROPLET_IP}" "
          if [ ! -f /etc/sudoers.d/deploy ]; then
            echo 'deploy ALL=(ALL) NOPASSWD: /usr/bin/mkdir, /usr/bin/chown' > /etc/sudoers.d/deploy && \
            chmod 440 /etc/sudoers.d/deploy
          fi
        "

        # Add SSH key if not already present
        ssh -o StrictHostKeyChecking=no "root@${DROPLET_IP}" "
          if ! grep -q '$(cat ~/.ssh/id_rsa.pub)' /home/deploy/.ssh/authorized_keys; then
            cat ~/.ssh/id_rsa.pub >> /home/deploy/.ssh/authorized_keys
          fi
        " 