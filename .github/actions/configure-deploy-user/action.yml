name: 'Configure Deploy User'
description: 'Creates and configures the deploy user on the droplet'

inputs:
  droplet_ip:
    description: 'Digital Ocean Droplet IP'
    required: true
  DIGITAL_OCEAN_SSH_PRIVATE_KEY:
    description: 'Digital Ocean SSH Private Key'
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure Deploy User
      shell: bash
      run: |
        # Function to check if user exists
        check_user() {
          ssh -o StrictHostKeyChecking=no root@${{ inputs.droplet_ip }} "id -u deploy >/dev/null 2>&1"
          return $?
        }

        # Create deploy user if it doesn't exist
        if ! check_user; then
          echo "Creating deploy user..."
          ssh -o StrictHostKeyChecking=no root@${{ inputs.droplet_ip }} "
            useradd -m -s /bin/bash deploy && \
            mkdir -p /home/deploy/.ssh && \
            touch /home/deploy/.ssh/authorized_keys && \
            chmod 700 /home/deploy/.ssh && \
            chmod 600 /home/deploy/.ssh/authorized_keys && \
            chown -R deploy:deploy /home/deploy/.ssh
          "
        else
          echo "Deploy user already exists"
        fi

        # Configure sudo access (idempotent)
        ssh -o StrictHostKeyChecking=no root@${{ inputs.droplet_ip }} "
          if [ ! -f /etc/sudoers.d/deploy ]; then
            echo 'deploy ALL=(ALL) NOPASSWD: /usr/bin/mkdir, /usr/bin/chown' > /etc/sudoers.d/deploy && \
            chmod 440 /etc/sudoers.d/deploy
          fi
        "

        # Add SSH key if not already present
        ssh -o StrictHostKeyChecking=no root@${{ inputs.droplet_ip }} "
          if ! grep -q '$(cat ~/.ssh/id_rsa.pub)' /home/deploy/.ssh/authorized_keys; then
            cat ~/.ssh/id_rsa.pub >> /home/deploy/.ssh/authorized_keys
          fi
        " 