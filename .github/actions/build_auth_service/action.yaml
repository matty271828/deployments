name: 'Build Auth Service'
description: 'Builds the auth service'

inputs:
  GH_PERSONAL_ACCESS_TOKEN:
    description: 'GitHub Personal Access Token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: 'Clean up old artifacts'
      shell: bash
      run: |
        # Get the list of artifacts
        artifacts=$(curl -s -H "Authorization: token ${{ inputs.GH_PERSONAL_ACCESS_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts")
        
        # Extract and delete auth-service artifacts
        echo "$artifacts" | jq -r '.artifacts[] | select(.name=="auth-service") | .id' | while read -r artifact_id; do
          if [ ! -z "$artifact_id" ]; then
            echo "Deleting artifact $artifact_id"
            curl -s -X DELETE \
              -H "Authorization: token ${{ inputs.GH_PERSONAL_ACCESS_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$artifact_id"
          fi
        done

    - name: 'Checkout code'
      uses: 'actions/checkout@v4'

    - name: 'Setup Node.js'
      uses: 'actions/setup-node@v4'
      with:
        node-version: '20'

    - name: 'Install dependencies'
      working-directory: './auth-service'
      shell: bash
      run: 'npm install'

    - name: 'Build'
      working-directory: './auth-service'
      shell: bash
      run: 'npx wrangler deploy --dry-run --outdir=dist'

    - name: 'Upload artifact'
      uses: 'actions/upload-artifact@v4'
      with:
        name: 'auth-service'
        path: 'auth-service/dist'
        retention-days: 1