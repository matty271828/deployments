name: Terraform
description: 'Initializes the Terraform working directory'

on:
    workflow_call:
      inputs:
        domain:
          description: 'Domain Name'
          required: true
          type: string
      secrets:
        CLOUDFLARE_ACCOUNT_ID:
          required: true
        CLOUDFLARE_API_TOKEN:
          required: true
        GH_PERSONAL_ACCESS_TOKEN:
          required: true
        DIGITAL_OCEAN_API_TOKEN:
          required: true
        DIGITAL_OCEAN_SSH_KEY_NAME:
          required: true
        digital_ocean_ssh_private_key:
          required: true
      outputs:
        droplet_ip:
          description: 'IP address of the created Digital Ocean droplet'
          value: ${{ jobs.terraform-apply.outputs.droplet_ip }}

jobs:
  init-plan-apply:
    runs-on: ubuntu-latest
    outputs:
      droplet_ip: ${{ steps.terraform.outputs.droplet_ip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Run Terraform
        id: terraform
        uses: ./.github/actions/run_terraform
        with:
          domain: ${{ inputs.domain }}
          cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          digital_ocean_api_token: ${{ secrets.DIGITAL_OCEAN_API_TOKEN }}
          digital_ocean_ssh_key_name: ${{ secrets.DIGITAL_OCEAN_SSH_KEY_NAME }}
          digital_ocean_ssh_private_key: ${{ secrets.DIGITAL_OCEAN_SSH_PRIVATE_KEY }}