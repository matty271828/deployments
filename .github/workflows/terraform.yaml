name: Terraform
description: 'Initializes the Terraform working directory'

on:
    workflow_call:
      inputs:
        domain:
          description: 'Domain Name'
          required: true
          type: string
      secrets:
        CLOUDFLARE_ACCOUNT_ID:
          required: true
        CLOUDFLARE_API_TOKEN:
          required: true

jobs:
  terraform-init:
    name: 'Init'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Terraform Init
        uses: ./.github/actions/terraform-init

      - name: Cache Terraform files
        uses: actions/cache@v3
        with:
          path: |
            terraform/.terraform
            terraform/.terraform.lock.hcl
          key: ${{ runner.os }}-terraform-${{ hashFiles('terraform/**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

  terraform-plan:
    name: 'Plan'
    runs-on: ubuntu-latest
    needs: terraform-init
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Cache Terraform files
        uses: actions/cache@v3
        with:
          path: |
            terraform/.terraform
            terraform/.terraform.lock.hcl
          key: ${{ runner.os }}-terraform-${{ hashFiles('terraform/**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Plan
        uses: ./.github/actions/terraform-plan
        with:
          domain: ${{ inputs.domain }}
          cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}