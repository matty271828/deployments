name: Deploy Project to Serverless
description: 'Deploys a new project to the serverless infrastructure'

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Domain Name'
        required: true
        type: string
      frontend_repo:
        description: 'Frontend Repository URL (e.g., https://github.com/username/repo)'
        required: true
        type: string

jobs:
  validate:
    name: 'Validate'
    uses: ./.github/workflows/validate.yaml
    with:
      domain: ${{ inputs.domain }}
      frontend_repo: ${{ inputs.frontend_repo }}
    secrets:
      cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

  add-to-domains:
    name: 'Add to Domains'
    needs: validate
    runs-on: ubuntu-latest
    outputs:
      domains: ${{ steps.add-to-domains.outputs.domains }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup domains
        id: setup-domains
        uses: ./.github/actions/setup_domains
        with:
          domain: ${{ inputs.domain }}
          frontend_repo: ${{ inputs.frontend_repo }}

  run-terraform:
    name: 'Run Terraform'
    needs: [add-to-domains, validate]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Terraform
        uses: ./.github/actions/run_terraform
        with:
          domains: ${{ needs.add-to-domains.outputs.domains }}
          cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}